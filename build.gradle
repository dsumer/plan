buildscript {
	ext {
		kotlinVersion = '1.2.10'
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'

group = 'at.dsumer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}

dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
	compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
	compile('org.flywaydb:flyway-core')

	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

ext {
	webpackOutputDir = "${project.buildDir}/generated-resources/vue"
	vueSourceDir = "${projectDir}/src/main/vue"
}

sourceSets {
	main {
		output.dir(webpackOutputDir, buildBy: 'webpackBuild')
		output.dir(file("${project.projectDir}/target/generated-sources/buildinfo"), buildBy: 'buildInfo')
	}
}

node {
	download = true
	version = '8.3.0'
	yarnVersion = '1.3.2'
}

task prepareBuild() {
	doLast {
		new File(webpackOutputDir, 'static').mkdirs()
	}
}

task webpackBuild(type: YarnTask, dependsOn: ['yarn', 'prepareBuild'], group: 'node') {
	args = ['run', 'build', '--', '--progress=false']
	inputs.file("${projectDir}/package.json")
	inputs.file("${projectDir}/webpack.config.json")
	inputs.dir(vueSourceDir)
	outputs.dir(webpackOutputDir)
}


task esLint(type: YarnTask, dependsOn: ['yarn'], group: 'node') {
	args = ['run', 'lint']
}

task webpackWatch(type: YarnTask) {
	args = ['run', 'watch']
}

clean.doFirst {
	delete "${projectDir}/node_modules/"
}

processResources.dependsOn 'webpackBuild'
check.dependsOn 'esLint'